{"version":3,"sources":["components/header/header.js","components/footer/footer.js","components/if/index.js","components/form/form.js","components/results/index.js","components/history/history.js","App.js","index.js"],"names":["Header","to","Footer","render","condition","children","If","props","React","Children","map","child","cloneElement","Then","Else","Form","handleSubmit","e","a","preventDefault","toggleLoading","console","log","state","url","fiilForm","method","methode","body","fetch","raw","json","data","headers","forEach","value","head","results","Headers","Response","handler","setHistory","mode","then","alert","handleChangeUrl","target","setState","handleChangeMethod","handleBody","request","className","this","onSubmit","type","id","onChange","defaultValue","defaultChecked","name","rows","cols","Component","Result","loading","src","result","getStorage","history","localStorage","getItem","JSON","parse","get","handleClick","fillFormHandler","length","val","idx","key","onClick","App","handleForm","obj","hisArray","stringify","setItem","exact","path","Main","StrictMode","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.0ac1001f.chunk.js","sourcesContent":["import React from 'react';\nimport './header.scss';\nimport { Link, NavLink } from 'react-router-dom';\nconst Header = () => {\n    return (\n        <header>\n        <h1>RESTy</h1>\n        <ul>\n          <li><NavLink to='/'>Home</NavLink></li>\n          <li><NavLink to='/history'>History</NavLink></li>\n        </ul>\n      </header>\n    );\n    };\n    \n    \nexport default Header;","import React from 'react';\nimport './footer.scss';\n\nconst Footer = () => {\nreturn (\n  <footer>  &copy; 2020 Code Fellows</footer>\n);\n};\n\nexport default Footer;","import React from 'react';\n\nconst render = (condition = false, children = null) => {\n  return condition ? children : null;\n};\nexport const If = (props) => {\n  return React.Children.map(props.children, (child) => {\n    return React.cloneElement(child, { condition: props.condition });\n  });\n};\n\nexport const Then = (props) => render(props.condition, props.children);\nexport const Else = (props) => render(!props.condition, props.children);\n","import React from 'react';\nimport './form.scss';\nimport { If, Then, Else } from '../if';\n\nclass Form extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      method : '',\n      url : '',\n      body : {},\n      request: {}\n    };\n  }\n  handleSubmit = async (e) => {\n    // console.log('dddddddddd', this.props.fiilForm);\n    // console.log('hhhhh', this.state.url);\n    \n    e.preventDefault();\n    this.props.toggleLoading();\n    console.log(this.state.url);\n    console.log(this.props.fiilForm.url);\n    let url = this.state.url || this.props.fiilForm.url\n    // console.log('sssssssss' , url);\n    \n    let method = this.state.methode || this.props.fiilForm.method\n    // console.log('mmmmmmmmmm' , method);\n\n    let body =  this.state.body || this.props.fiilForm.body\n    if (url && method) {  \n      \n      switch (method) {\n        case 'get':\n          try {\n            let raw = await fetch(url);\n            let data = await raw.json();\n            let head;\n            raw.headers.forEach(value => {\n              head = { 'Content-Type': value }\n            })\n            let results = {\n              Headers: head,\n              Response: data\n            }\n            this.props.handler(results);\n            this.props.toggleLoading();\n            this.props.setHistory(method,url,body);\n          } catch (e) {\n            console.log(e);\n          }\n          break;\n        case 'post':\n        case 'put':\n          if (body) {\n            fetch(url, {\n              method: `${method}`,\n              mode: 'cors',\n              headers: {\n                'Content-Type': 'application/json',\n                'Access-Control-Allow-Origin': '*'\n              },\n              body: body\n            })\n              .then(data => data.json()).then(results => {\n                this.props.handler(results);\n                this.props.toggleLoading();\n            this.props.setHistory(method,url,body);\n\n              })\n          } else {\n            alert('please Enter the body');\n          }\n          break;\n        case 'delete':\n          fetch(url, {\n            method: `${method}`,\n            mode: 'cors',\n            headers: {\n              'Content-Type': 'application/json',\n              'Access-Control-Allow-Origin': '*'\n            },\n          })\n            .then(() => {\n              this.props.handler({results:'Item Deleted ...'});\n            this.props.toggleLoading();\n            this.props.setHistory(method,url,body);\n\n            })\n      }\n\n    }\n  }\n    \n  \n\n  handleChangeUrl = (e) => {\n    const url = e.target.value;\n    this.setState({ url })\n  };\n  handleChangeMethod = (e) => {\n    const methode = e.target.value;\n    this.setState({ methode })\n  }\n\n  handleBody = e =>{\n    const body = e.target.value;\n    this.setState({body})\n  }\n\n  render () {\n\n  \n    return (\n      < main className=\"main\">\n         <If condition={this.props.fiilForm.url}>\n          <Then>\n          <form onSubmit={this.handleSubmit}>\n          <label className=\"url\">\n            <span>URL:</span>\n            <input type=\"text\" id=\"url\" onChange={this.handleChangeUrl}   defaultValue={this.props.fiilForm.url} />\n            <input id=\"submit\" type=\"submit\" value =\"GO!\"/>\n          </label>\n          <label className=\"method\">\n          <If condition={this.props.fiilForm.method == 'get'}>\n          <Then>\n          <input onChange={this.handleChangeMethod} defaultChecked   type=\"radio\" id=\"get\" name=\"methode\" value=\"get\" />\n            <label>GET</label>\n          </Then>\n          <Else>\n          <input onChange={this.handleChangeMethod}   type=\"radio\" id=\"get\" name=\"methode\" value=\"get\" />\n          <label>GET</label>\n          </Else>\n        </If>\n        <If condition={this.props.fiilForm.method == 'post'}>\n          <Then>\n          <input onChange={this.handleChangeMethod} defaultChecked type=\"radio\" id=\"post\" name=\"methode\" value=\"post\" />\n            <label>POST</label>\n          </Then>\n          <Else>\n          <input onChange={this.handleChangeMethod}  type=\"radio\" id=\"post\" name=\"methode\" value=\"post\" />\n            <label>POST</label>\n          </Else>\n        </If>\n        <If condition={this.props.fiilForm.method == 'put'}>\n          <Then>\n          <input onChange={this.handleChangeMethod} defaultChecked type=\"radio\" id=\"put\" name=\"methode\" value=\"put\" />\n            <label>PUT</label>\n          </Then>\n          <Else>\n          <input onChange={this.handleChangeMethod}  type=\"radio\" id=\"put\" name=\"methode\" value=\"put\" />\n            <label>PUT</label>\n          </Else>\n        </If>\n        <If condition={this.props.fiilForm.method == 'delete'}>\n          <Then>\n          <input onChange={this.handleChangeMethod} defaultChecked type=\"radio\" id=\"delete\" name=\"methode\" value=\"delete\" />\n            <label>DELETE</label>\n          </Then>\n          <Else>\n          <input onChange={this.handleChangeMethod} type=\"radio\" id=\"delete\" name=\"methode\" value=\"delete\" />\n            <label>DELETE</label>\n          </Else>\n        </If>\n            <br/>\n            <label> Body :\n          <textarea rows=\"15\" cols=\"50\" className=\"body\" value ={this.props.fiilForm.body} > </textarea></label>\n          </label>\n        </form>\n          </Then>\n          <Else>\n          <form onSubmit={this.handleSubmit}>\n          <label className=\"url\">\n            <span>URL:</span>\n            <input type=\"text\" id=\"url\"  onChange={this.handleChangeUrl} />\n            <input id=\"submit\" type=\"submit\" value =\"GO!\"/>\n          </label>\n          <label className=\"method\">\n            <input onChange={this.handleChangeMethod} type=\"radio\" id=\"get\" name=\"methode\" value=\"get\" />\n            <label>GET</label>\n            <input onChange={this.handleChangeMethod} type=\"radio\" id=\"post\" name=\"methode\" value=\"post\" />\n            <label>POST</label>\n            <input onChange={this.handleChangeMethod} type=\"radio\" id=\"put\" name=\"methode\" value=\"put\" />\n            <label>PUT</label>\n            <input onChange={this.handleChangeMethod} type=\"radio\" id=\"delete\" name=\"methode\" value=\"delete\" />\n            <label>DELETE</label>\n            <br/>\n            <label> Body :\n          <textarea rows=\"15\" cols=\"50\" className=\"body\" onChange={this.handleBody} > </textarea></label>\n          </label>\n        </form>\n          </Else>\n        </If>\n        \n      </main>\n    )\n  \n    }\n  }\n\nexport default Form;\n","import React from 'react';\nimport ReactJson from 'react-json-view'\nimport { If, Then, Else } from '../if';\nimport './loader.scss';\n\nfunction Result(props) {\n  console.log(props.loading);\n  return (\n    <>\n    {/* <ReactJson src={props.result} theme=\"monokai\" /> */}\n    {/* <img src=\"https://i.pinimg.com/originals/72/f1/a4/72f1a425e3ea3505929a30b8adabefb8.gif\" className={`loading-${props.loading}`}/> */}\n    <If condition={!props.loading}>\n          <Then>\n          <ReactJson id= \"output\" src={props.result}  /> \n          </Then>\n          <Else>\n          <img src=\"https://i.pinimg.com/originals/72/f1/a4/72f1a425e3ea3505929a30b8adabefb8.gif\" />\n          </Else>\n        </If>\n        {/* <div className={`loading-${!props.loading}`}  id=\"output\">\n            <ReactJson src={props.result} />\n        </div> */}\n    </>\n  );\n}\n\nexport default Result;\n","import React from 'react';\nimport { render } from 'enzyme';\nimport { Link, NavLink } from 'react-router-dom';\n// import validateFormData from 'react-jsonschema-form/lib/validate';\nimport './history.scss';\n\nconst history = (props) => {\n    let get = getStorage();\n    const handleClick = e =>{\n        console.log('ddddddd',get ,get[e.target.id].method, get[e.target.id].url ,get[e.target.id].body);\n        props.fillFormHandler(get[e.target.id].method, get[e.target.id].url ,get[e.target.id].body)\n    }\n    if(get && get.length > 0){\n        const result = get.map((val, idx) => {\n            return (\n                <li className=\"mm\" key={idx}>\n                    <span className={`method ${val.method}`}>{val.method}</span>\n                    <span className=\"url\">{val.url}</span>\n                    {/* <span className=\"body\">{val.body ? val.body : '...'}</span> */}\n                     <button onClick={handleClick}><NavLink id ={idx} to='/'>Re-Run</NavLink></button>\n                </li>\n            );\n        });\n        return (\n            <div className=\"list\">\n                {result}\n            </div>\n        );\n    }else{\n        return(\n            <div></div>\n        )\n    }\n}\n\n\nconst getStorage = () => {\n    let history = localStorage.getItem('history');\n    if (history) {\n        let result = JSON.parse(history);\n        return result;\n    }\n}\n\nexport default history;","import React from 'react';\nimport './design/design.scss';\nimport './design/variables.scss';\nimport {BrowserRouter,Route, NavLink, Router} from 'react-router-dom';\nimport Footer from './components/footer/footer.js'\nimport Header from './components/header/header.js'\nimport Form from './components/form/form.js'\nimport Result from './components/results/index'\nimport History from './components/history/history.js'\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loading : false,\n      result: {},\n      history:[],\n      fiilForm : {}\n\n    };\n  }\n  toggleLoading = () => {\n    this.setState({ loading: !this.state.loading })\n  }\n  handleForm = (results) => {\n    this.setState({ result: results });\n  };\n  setHistory =(method,url,body)=>{\n    let obj = {method,url,body};\n    let history = [...this.state.history,obj];\n    this.setState({\n      history:history\n    })\n    let hisArray = JSON.stringify(this.state.history);\n    localStorage.setItem('history' , hisArray );\n  }\n  fillFormHandler = (method,url,body) =>{\n    this.setState({\n      fiilForm:{method,url,body}\n    })\n  }\n  render() {\n    return (\n      <BrowserRouter>\n        <Header/>\n        <Route exact path='/'>\n        <Form fiilForm={this.state.fiilForm} toggleLoading={this.toggleLoading} handler={this.handleForm} setHistory={this.setHistory} />\n        <Result result={this.state.result} loading={this.state.loading}/>\n        </Route>\n        <Route exact path='/history'>\n          <History fillFormHandler={this.fillFormHandler}/>\n        </Route>\n        <Footer/>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Header from './components/header/header.js'\nimport Footer from './components/footer/footer.js'\n\nimport App from './App';\n\nclass Main extends React.Component {\n  render() {\n    return (\n      <React.StrictMode>\n        {/* <Header/> */}\n        <App />\n        {/* <Footer/> */}\n      </React.StrictMode>\n    );\n  }\n}\nReactDOM.render(<Main />, document.getElementById('root'));\n"],"sourceRoot":""}